{"version":3,"sources":["data.js","components/Page.js","App.js","index.js"],"names":["stockData","word","def","score","vocabInit","console","log","length","Lesson","setLesson","map","item","index","style","display","Button","variant","className","color","margin","onClick","toString","Page","a","useState","list","setCount","count","setScore","push","tempt","sort","Math","random","document","getElementById","value","type","id","Random","App","ReactDOM","render"],"mappings":"gNAAaA,EAAY,CACvB,CACE,CACEC,KAAM,UACNC,IAAK,6BAEP,CACED,KAAM,QACNC,IAAK,qCAEP,CACED,KAAM,UACNC,IAAK,kBAEP,CACED,KAAM,gBACNC,IAAK,kDAEP,CACED,KAAM,cACNC,IAAK,yBAEP,CACED,KAAM,UACNC,IAAK,8CAEP,CACED,KAAM,SACNC,IAAK,iCAEP,CACED,KAAM,OACNC,IAAK,mBAEP,CACED,KAAM,UACNC,IAAK,sDAEP,CACED,KAAM,SACNC,IAAK,uBAEP,CACED,KAAM,UACNC,IAAK,6BAEP,CACED,KAAM,YACNC,IAAK,gBAEP,CACED,KAAM,UACNC,IAAK,yDAEP,CACED,KAAM,SACNC,IAAK,wBAEP,CACED,KAAM,WACNC,IAAK,YAEP,CACED,KAAM,YACNC,IAAK,kCAEP,CACED,KAAM,YACNC,IAAK,uCAEP,CACED,KAAM,cACNC,IAAK,4BAEP,CACED,KAAM,SACNC,IAAK,oBAEP,CACED,KAAM,aACNC,IAAK,eAGT,CACE,CACED,KAAM,KACNC,IAAK,MAEP,CACED,KAAM,KACNC,IAAK,MAEP,CACED,KAAM,KACNC,IAAK,MAEP,CACED,KAAM,KACNC,IAAK,OAGT,CACE,CACED,KAAM,KACNC,IAAK,MAEP,CACED,KAAM,KACNC,IAAK,MAEP,CACED,KAAM,KACNC,IAAK,MAEP,CACED,KAAM,KACNC,IAAK,Q,OC3FX,IAAIC,EAAQ,EAERC,EAAY,CACd,CACEH,KAAM,IACNC,IAAK,MAGTE,EAAYJ,EAAU,GACtBK,QAAQC,IAAI,cAAeN,EAAUO,QA0BrC,IAAMC,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChB,OAAOT,EAAUU,KAAI,SAACC,EAAMC,GAAP,OACnB,qBAA4BC,MAAO,CAAEC,QAAS,gBAA9C,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAU,aACVC,MAAM,UACNL,MAAO,CAAEM,OAAQ,OACjBC,QAAS,kBAAMX,EAAUG,IAL3B,SAOGA,EAAQ,KARHA,EAAMS,gBAuKLC,MAzCf,WAWE,OA3HF,WACE,IAAIC,EAAI,GADQ,EAGSC,mBAASpB,GAHlB,mBAGTqB,EAHS,KAGHC,EAHG,OAIUF,mBAASrB,GAJnB,mBAITwB,EAJS,KAIFC,EAJE,KAoGhB,OA1FAL,EAAEM,KACA,gCAEE,cAAC,EAAD,CAAQpB,UAPI,SAACG,GACfc,EAAS1B,EAAUY,OAOjB,gCACE,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAU,aACVJ,MAAO,CAAEM,OAAQ,OACjBD,MAAM,UACNE,QAAS,WACP,IAAIU,EAAK,YAAOL,GAChBK,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,MACjCP,EAASI,GACTL,EAAKf,KAAI,SAACC,EAAMC,GACdsB,SAASC,eAAe,UAAYvB,GAAOwB,MAAQ,OAVzD,oBAiBA,cAACrB,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAU,aACVJ,MAAO,CAAEM,OAAQ,OACjBD,MAAM,UACNE,QAAS,WACPK,EAAKf,KAAI,SAACC,EAAMC,GAEZsB,SAASC,eAAe,UAAYvB,GAAOwB,OAASzB,EAAKV,MAEzDiC,SAASC,eAAe,UAAYvB,GAAOC,MAAMK,MAC/C,QACFf,MAEA+B,SAASC,eAAe,UAAYvB,GAAOC,MAAMK,MAAQ,MACzDgB,SAASC,eAAe,OAASvB,GAAOC,MAAMC,QAC5C,gBAGoD,IAApDoB,SAASC,eAAe,UAAYvB,GAAOwB,QAC7CF,SAASC,eAAe,UAAYvB,GAAOwB,MAAQ,QAGvDR,EAASzB,IAvBb,oBA4BA,eAACY,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAU,aACVJ,MAAO,CAAEM,OAAQ,OACjBD,MAAM,UAJR,UAMGS,EANH,cASDF,EAAKf,KAAI,SAACC,EAAMC,GAAP,OACR,sBAA4BK,UAAU,cAAtC,UACE,qBAAKJ,MAAO,CAAEC,QAAS,gBAAvB,SACE,eAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAU,aACVJ,MAAO,CAAEM,OAAQ,OACjBD,MAAM,UAJR,UAMGN,EAAQ,EANX,KAMgBD,EAAKT,SAGvB,qBAAKW,MAAO,CAAEC,QAAS,gBAAvB,SACE,uBAAOuB,KAAK,GAAGpB,UAAU,eAAeqB,GAAI,UAAY1B,MAE1D,sBAAKC,MAAO,CAAEC,QAAS,QAAUwB,GAAI,OAAS1B,EAA9C,UACE,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAU,aACVJ,MAAO,CAAEM,OAAQ,OACjBD,MAAM,UAJR,SAMGP,EAAKV,OACE,SAtBJW,EAAMS,mBA8BfE,EAaOgB,IChLDC,MARf,WACE,OACE,qBAAKvB,UAAU,GAAf,SACE,cAAC,EAAD,OCFNwB,IAASC,OAAO,cAAC,EAAD,IAASR,SAASC,eAAe,W","file":"static/js/main.84f5f375.chunk.js","sourcesContent":["export const stockData = [\n  [\n    {\n      word: \"aquatic\",\n      def: \"adj., living in the water\",\n    },\n    {\n      word: \"array\",\n      def: \"n., a large number,  a collection\",\n    },\n    {\n      word: \"defense\",\n      def: \"n., protection\",\n    },\n    {\n      word: \"deforestation\",\n      def: \"n., the removal of all trees from a large area\",\n    },\n    {\n      word: \"environment\",\n      def: \"n., the natural world\",\n    },\n    {\n      word: \"erosion\",\n      def: \"n., loss of soil from action of water wind\",\n    },\n    {\n      word: \"extend\",\n      def: \"v., to reach past, get bigger\",\n    },\n    {\n      word: \"fell\",\n      def: \"v., to cut down\",\n    },\n    {\n      word: \"habitat\",\n      def: \"n., the natural area where a plant or animal lives\",\n    },\n    {\n      word: \"impact\",\n      def: \"n., a strong effect\",\n    },\n    {\n      word: \"inhibit\",\n      def: \"v., to prevent, slow down\",\n    },\n    {\n      word: \"intercept\",\n      def: \"v., to catch\",\n    },\n    {\n      word: \"logging\",\n      def: \"n., the cutting down of trees for commercial purposes\",\n    },\n    {\n      word: \"myriad\",\n      def: \"adj., many, numerous\",\n    },\n    {\n      word: \"nutrient\",\n      def: \"n., food\",\n    },\n    {\n      word: \"pollution\",\n      def: \"n., damage to air, water, etc.\",\n    },\n    {\n      word: \"stabilize\",\n      def: \"v., to keep from changing, maintain\",\n    },\n    {\n      word: \"terrestrial\",\n      def: \"adj., living in the land\",\n    },\n    {\n      word: \"vanish\",\n      def: \"v., to disappear\",\n    },\n    {\n      word: \"vegetation\",\n      def: \"n., plants\",\n    },\n  ],\n  [\n    {\n      word: \"11\",\n      def: \"12\",\n    },\n    {\n      word: \"13\",\n      def: \"14\",\n    },\n    {\n      word: \"15\",\n      def: \"16\",\n    },\n    {\n      word: \"17\",\n      def: \"18\",\n    },\n  ],\n  [\n    {\n      word: \"21\",\n      def: \"22\",\n    },\n    {\n      word: \"23\",\n      def: \"24\",\n    },\n    {\n      word: \"25\",\n      def: \"26\",\n    },\n    {\n      word: \"27\",\n      def: \"28\",\n    },\n  ],\n];\n","import React, { useEffect, useState } from \"react\";\n// import { Button } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport { stockData } from \"../data\";\n\nfunction NewVocab() {\n  var indents = [\n    <div style={{}}>\n      <div>Practice memorizing vocabulary BARRONS IELTS</div>\n      <Button className=\"all-button\" style={{ margin: \"3px\" }}>\n        New Vocab\n      </Button>\n      <Button\n        variant=\"contained\"\n        className=\"all-button\"\n        style={{ margin: \"3px\" }}\n        color=\"primary\"\n      >\n        Start\n      </Button>\n    </div>,\n  ];\n\n  return indents;\n}\nlet score = 0;\n\nlet vocabInit = [\n  {\n    word: \"a\",\n    def: \"b\",\n  },\n];\nvocabInit = stockData[0];\nconsole.log(\"lengthStock\", stockData.length);\n\n// function Lesson() {\n//   var a = [];\n//   const onClick = (index) => {\n//     vocabInit = stockData[index];\n//     console.log(\"VocabInit\", a);\n//   };\n\n//   stockData.map((item, index) => {\n//     a.push(\n//       <div style={{ display: \"inline-block\" }}>\n//         <Button\n//           class=\"btn-primary\"\n//\n//           onClick={() => onClick(index)}\n//         >\n//           {index + 1}\n//         </Button>\n//       </div>\n//     );\n//   });\n\n//   return a;\n// }\n\nconst Lesson = ({ setLesson }) => {\n  return stockData.map((item, index) => (\n    <div key={index.toString()} style={{ display: \"inline-block\" }}>\n      <Button\n        variant=\"contained\"\n        className=\"all-button\"\n        color=\"primary\"\n        style={{ margin: \"3px\" }}\n        onClick={() => setLesson(index)}\n      >\n        {index + 1}\n      </Button>\n    </div>\n  ));\n};\n\nfunction Random() {\n  var a = [];\n\n  const [list, setCount] = useState(vocabInit);\n  const [count, setScore] = useState(score);\n  // a.push(Lesson());\n  const onClick = (index) => {\n    setCount(stockData[index]);\n  };\n\n  a.push(\n    <div>\n      {/* {JSON.stringify(list)} */}\n      <Lesson setLesson={onClick} />\n      <div>\n        <Button\n          variant=\"contained\"\n          className=\"all-button\"\n          style={{ margin: \"3px\" }}\n          color=\"primary\"\n          onClick={() => {\n            let tempt = [...list];\n            tempt.sort(() => Math.random() - 0.5);\n            setCount(tempt);\n            list.map((item, index) => {\n              document.getElementById(\"ipVocab\" + index).value = \"\";\n            });\n            // document.getElementById(\"ipVocab\").value = \"\";\n          }}\n        >\n          Random\n        </Button>\n        <Button\n          variant=\"contained\"\n          className=\"all-button\"\n          style={{ margin: \"3px\" }}\n          color=\"primary\"\n          onClick={() => {\n            list.map((item, index) => {\n              if (\n                document.getElementById(\"ipVocab\" + index).value == item.word\n              ) {\n                document.getElementById(\"ipVocab\" + index).style.color =\n                  \"green\";\n                score++;\n              } else {\n                document.getElementById(\"ipVocab\" + index).style.color = \"red\";\n                document.getElementById(\"word\" + index).style.display =\n                  \"inline-block\";\n              }\n\n              if (document.getElementById(\"ipVocab\" + index).value == \"\")\n                document.getElementById(\"ipVocab\" + index).value = \"x\";\n            });\n            // document.getElementById(\"ipVocab\").value = \"\";\n            setScore(score);\n          }}\n        >\n          Finish\n        </Button>\n        <Button\n          variant=\"contained\"\n          className=\"all-button\"\n          style={{ margin: \"3px\" }}\n          color=\"primary\"\n        >\n          {count} / 20\n        </Button>\n      </div>\n      {list.map((item, index) => (\n        <div key={index.toString()} className=\"inline w-50\">\n          <div style={{ display: \"inline-block\" }}>\n            <Button\n              variant=\"contained\"\n              className=\"all-button\"\n              style={{ margin: \"3px\" }}\n              color=\"primary\"\n            >\n              {index + 1}, {item.def}\n            </Button>\n          </div>\n          <div style={{ display: \"inline-block\" }}>\n            <input type=\"\" className=\"form-control\" id={\"ipVocab\" + index} />\n          </div>\n          <div style={{ display: \"none\" }} id={\"word\" + index}>\n            <Button\n              variant=\"contained\"\n              className=\"all-button\"\n              style={{ margin: \"3px\" }}\n              color=\"primary\"\n            >\n              {item.word}\n            </Button>{\" \"}\n          </div>\n        </div>\n      ))}\n    </div>\n    //\n  );\n\n  return a;\n}\n\nfunction listShuffle() {\n  vocabInit.sort(() => Math.random() - 0.5);\n  console.log(\"listInit\" + vocabInit);\n}\n\n// const shuffle = (listShuffle) => (e) => {\n//   listShuffle = listShuffle.sort(() => Math.random() - 0.5);\n//   console.log(listShuffle);\n// };\nfunction Page() {\n  var indents = Random();\n  // var indents = NewVocab();\n  // for (var i = 0; i < 10; i++) {\n  //   indents.push(\n  //     <Button variant=\"contained\" className = \"all-button\" color=\"primary\" class=\"btn-primary\">\n  //       {i + 1}\n  //     </Button>\n  //   );\n  // }\n  // indents.push(RandomVocab());\n  return indents;\n}\n\nfunction RandomVocab() {\n  var indents = [];\n  for (var i = 0; i < 10; i++) {\n    indents.push(\n      <div>\n        <Button\n          variant=\"contained\"\n          className=\"all-button\"\n          style={{ margin: \"3px\" }}\n          color=\"primary\"\n        >\n          {i + 1}\n        </Button>\n        <Button\n          variant=\"contained\"\n          className=\"all-button\"\n          style={{ margin: \"3px\" }}\n          color=\"primary\"\n        >\n          Vocab\n        </Button>\n      </div>\n    );\n  }\n  return indents;\n}\n\nexport default Page;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Page from \"./components/Page\";\nfunction App() {\n  return (\n    <div className=\"\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Button from '@material-ui/core/Button';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}